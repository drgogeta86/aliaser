#!/bin/bash
# chkconfig: 2345 70 25
# description: Setup Secondary IP 

# ----
# Resolve issues with IP aliasing for Amazon EC2 linux virtual machines
# ----
#


if [ $# -lt 1 ]
then
        echo "No command specified"  
	echo "Usage: $0 start, $0 stop, $0 restart, $0 print or $0 test"
	echo "Execute $0 -h or $0 help for more detailed usage information"
        exit
fi

ARGV1=$1

function all-nic {

if [ $ARGV1 == "cloudendure" ];then
   for i in $(ls -d1 /sys/class/net/eth*)	
	do
	   ETHINT=$(basename $i)
           mac-grab
           mask-grab
       	   private-grab
           write-conf
	done
fi 

   service network restart
   for i in $(ls -d1 /sys/class/net/eth*)
	do
	   ETHINT=$(basename $i)
	   mac-grab
	   mask-grab
           mask-grab
	   private-grab
   	   private-loop
	done
}

function write-conf {

# Eth0 need to be configured as DHCP ... the others not (F.Isgro 19/06/2017)
if [ "$ETHINT" ==  "eth0" ];then

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-$ETHINT
DEVICE=$ETHINT
BOOTPROTO=dhcp
ONBOOT=yes
EOF

else

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-$ETHINT
DEVICE=$ETHINT
BOOTPROTO=none
ONBOOT=yes
TYPE=Ethernet
USERCTL=yes
PEERDNS=yes
IPV6INIT=no
NETMASK=$NETMASK
IPADDR=${PRIVATE[0]}
EOF

cat << EOF > /etc/sysconfig/network-scripts/route-$ETHINT
default via $GATEWAY dev $ETHINT table admin
$CIDR dev $ETHINT src ${PRIVATE[0]} table admin
EOF


cat << EOF > /etc/sysconfig/network-scripts/rule-$ETHINT
from ${PRIVATE[0]}/32 table admin
to ${PRIVATE[0]}/32 table admin
EOF


echo "1 admin" >> /etc/iproute2/rt_tables

fi


}

function mac-grab {
MAC_ADDR=$(ip addr | grep -m 1 -A2 $ETHINT | awk '/ether/ {print $2}')
}

function public-grab {
	PUBLIC=($(curl -s -f http://169.254.169.254/latest/meta-data/public-ipv4))
}

function private-grab {
	PRIVATE=($(curl -s -f http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/local-ipv4s))
}

function primary-private-grab {
	PRIMARYPRIV=($(curl -s -f http://169.254.169.254/latest/meta-data/local-ipv4))
}

function private-loop {
	for priv in ${PRIVATE[@]:1};
        do
                echo "Adding IP: $priv"
                ip addr add dev $ETHINT $priv/$MASK
		if [ "$ETHINT" !=  "eth0" ];then
                   /sbin/ip -4 rule add from $priv/32 lookup admin
                   /sbin/ip -4 rule add to $priv/32 lookup admin
		fi
        done
}

function mask-grab {
	CIDR=$(curl -s -f http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/subnet-ipv4-cidr-block)
	MASK=$(curl -s -f http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/subnet-ipv4-cidr-block | awk -F/ '{print $2}')
        NETMASK=$(ipcalc -m 10.10.0.0/$(curl -s -f http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/subnet-ipv4-cidr-block | awk -F/ '{print $2}')| cut -f2 -d\=)	
	GATEWAY=$(curl -s -f http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/subnet-ipv4-cidr-block |  awk -F  "." '/1/ {print $1 "." $2 "." $3 ".1"}')
}

case "$1" in

'-h' | '-H' | 'help') printf "\nAliaser v0.01\nUsage: $0 -h\n$0 help\n$0 version\n$0 start\n$0 restart\n$0 stop\n$0 print\n$0 test\n\n"
	;;

'version' | '-v' | '-V') printf "aliaser v0.01
-----------------------------------
Â©2015 Josh Wieder\nhttp://www.joshwieder.net/\njosh.wieder@live.com
-----------------------------------
aliaser comes with ABSOLUTELY NO WARRANTY.
This is free software made available through
the GNU General Public License v2. You are
welcome to redistribute it under certain
conditions - see LICENSE for details.\n\n"
        ;;

'start' | 'cloudendure') all-nic 
	#mac-grab
	#mask-grab
	#private-grab
	#private-loop
	#write-conf
	;;

'restart') service network restart
	mac-grab
	private-grab        
	private-loop
	;;

'stop') service network restart
	;;

'print' | '-p' | '-P') mac-grab
	
	primary-private-grab
	printf "Primary private IPs:  %s\n" "$PRIMARYPRIV"

	private-grab
        for priv in ${PRIVATE[@]:1};
	do
		printf "Secondary Private IP:  %s\n" "$priv" 
	done

   	public-grab
        printf "Primary public IP:  %s\n\n" "$PUBLIC";
#	printf "Interface:  %s\n" "$ETHINT";

	;;

'test' | 'verify')  mac-grab
	private-grab
	curltest=$(curl -s -f --interface ${PRIVATE[@]:1} ifconfig.me)
 	printf "Secondary public IP: %s\n" "$curltest"
	;;

*) printf "Invalid option - try $0 -h or $0 help for correct usage"
	;;
esac

